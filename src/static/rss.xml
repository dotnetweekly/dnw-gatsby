<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>dotNET Weekly - Week undefined Year undefined</title>
        <link>https://www.dotnetweekly.com/week/undefined/year/undefined?feed=rss</link>
        <description></description>
        <lastBuildDate>Thu, 02 Jul 2020 16:28:36 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <category>Articles</category>
        <category>Videos</category>
        <item>
            <title><![CDATA[New FREE Ebook: A Quick Guide to Expert .NET Reporting Tools]]></title>
            <link>https://www.dotnetweekly.com/articles/new-free-ebook-a-quick-guide-to-expert-net-reporting-tools</link>
            <guid>https://www.dotnetweekly.com/articles/new-free-ebook-a-quick-guide-to-expert-net-reporting-tools</guid>
            <pubDate>Thu, 02 Jul 2020 09:37:12 GMT</pubDate>
            <content:encoded><![CDATA[Clear and accurate reporting tools play a pivotal role in any business decision today and help companies digitize and streamline their reporting process. Take advantage of expert advice on successful integration between Reporting tools and web (Blazor, ASP.NET Core, ASP.NET MVC, ASP.NET WebForms, Angular, React and more) or desktop applications (WPF, WinForms, UWP) and many practical examples and use cases.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[The Magical Methods in C#]]></title>
            <link>https://www.dotnetweekly.com/articles/the-magical-methods-in-c</link>
            <guid>https://www.dotnetweekly.com/articles/the-magical-methods-in-c</guid>
            <pubDate>Tue, 30 Jun 2020 20:19:11 GMT</pubDate>
            <content:encoded><![CDATA[There’s a certain set of special method signatures in C# which have particular support on the language level. Methods with those signatures allow for using a special syntax which has several benefits. For example, we can use them to simplify our code or create DSL to express a solution to our domain-specific problem in a much cleaner way. I came across those methods in different places, so I decided to create a blog post to summarize all my discoveries on this subject. ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Configuring and Using Memcached in ASP.NET Core]]></title>
            <link>https://www.dotnetweekly.com/articles/configuring-and-using-memcached-in-aspnet-core</link>
            <guid>https://www.dotnetweekly.com/articles/configuring-and-using-memcached-in-aspnet-core</guid>
            <pubDate>Tue, 30 Jun 2020 18:45:39 GMT</pubDate>
            <content:encoded><![CDATA[In this article, we shall look in detail about what is Memcached and how we can configure ASP.NET Core application to use a Memcached instance for caching.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Integrating ASP.NET Core API Logs to Azure Application Insights via ILogger]]></title>
            <link>https://www.dotnetweekly.com/articles/integrating-aspnet-core-api-logs-to-azure-application-insights-via-ilogger</link>
            <guid>https://www.dotnetweekly.com/articles/integrating-aspnet-core-api-logs-to-azure-application-insights-via-ilogger</guid>
            <pubDate>Tue, 30 Jun 2020 18:43:57 GMT</pubDate>
            <content:encoded><![CDATA[Let's talk about what is azure application insights and how we can integrate our ASP.NET Core API deployed in an Azure App Service instance can be connected to an Application Insights and analyze Logs generated from the API in the Insights.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to deploy Blazor webassembly on GitHub Pages using GitHub Actions]]></title>
            <link>https://www.dotnetweekly.com/articles/how-to-deploy-blazor-webassembly-on-github-pages-using-github-actions</link>
            <guid>https://www.dotnetweekly.com/articles/how-to-deploy-blazor-webassembly-on-github-pages-using-github-actions</guid>
            <pubDate>Tue, 30 Jun 2020 17:27:24 GMT</pubDate>
            <content:encoded><![CDATA[With Blazor webassembly you can generate a static website and host it on GitHub Pages through GitHub Actions. Find out how!]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Introducing Secret Store]]></title>
            <link>https://www.dotnetweekly.com/articles/introducing-secret-store</link>
            <guid>https://www.dotnetweekly.com/articles/introducing-secret-store</guid>
            <pubDate>Tue, 30 Jun 2020 17:14:20 GMT</pubDate>
            <content:encoded><![CDATA[.NET Core provides a convenient way to read configuration from a variety of providers, without the application having to worry where they come from!

It has a rich ecosystem of configuration providers that you can use, either provided by Microsoft or as part of the (open-source) community. One of my favorite ones is Andrew Lock's YAML configuration provider which I use extensively for Promitor.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How Do I Think About Async Code?!]]></title>
            <link>https://www.dotnetweekly.com/articles/how-do-i-think-about-async-code</link>
            <guid>https://www.dotnetweekly.com/articles/how-do-i-think-about-async-code</guid>
            <pubDate>Tue, 30 Jun 2020 17:13:18 GMT</pubDate>
            <content:encoded><![CDATA[Increasingly essential to writing responsive applications, asynchronous code is becoming more and more popular. Unfortunately, asynchronous programming adds an additional level of complexity to your code.  As a result, understanding how this code even works can be tough no matter your experience level.  Whether you’re new to it or you just want a refresher, here is an intro to the world of asynchronous code!

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[.NET with Scott Hunter Part 1]]></title>
            <link>https://www.dotnetweekly.com/articles/net-with-scott-hunter-part-1</link>
            <guid>https://www.dotnetweekly.com/articles/net-with-scott-hunter-part-1</guid>
            <pubDate>Tue, 30 Jun 2020 17:12:35 GMT</pubDate>
            <content:encoded><![CDATA[In this episode, Robert is joined by Scott Hunter, who updates us on .NET 5, the next version and future of .NET. Scott recaps the announcements made recently at Build around the journey of unifying the .NET platform, with a single framework that extends from cloud to desktop to mobile and beyond. 

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Introducing dotnet-monitor, an experimental tool]]></title>
            <link>https://www.dotnetweekly.com/articles/introducing-dotnet-monitor-an-experimental-tool</link>
            <guid>https://www.dotnetweekly.com/articles/introducing-dotnet-monitor-an-experimental-tool</guid>
            <pubDate>Tue, 30 Jun 2020 16:53:59 GMT</pubDate>
            <content:encoded><![CDATA[dotnet-monitor is an experimental tool that makes it easier to get access to diagnostics information in a dotnet process.

When running a dotnet application differences in diverse local and production environments can make collecting diagnostics artifacts (e.g., logs, traces, process dumps) challenging. dotnet-monitor aims to simplify the process by exposing a consistent REST API regardless of where your application is run.

This blog post details how to get started with dotnet-monitor and covers the following:

How to setup dotnet-monitor
What diagnostics artifacts can be collected; and
How to collect each of the artifacts]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to secure ASP.NET Core with OAuth and JSON Web Tokens]]></title>
            <link>https://www.dotnetweekly.com/articles/how-to-secure-aspnet-core-with-oauth-and-json-web-tokens</link>
            <guid>https://www.dotnetweekly.com/articles/how-to-secure-aspnet-core-with-oauth-and-json-web-tokens</guid>
            <pubDate>Tue, 30 Jun 2020 06:28:28 GMT</pubDate>
            <content:encoded><![CDATA[Learn about how to secure your ASP.NET Core APIs with OAuth 2.0 and JSON Web Tokens without using third-party services like IdentityServer, Okta, and Auth0.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Nano services with ASP.NET Core or how to build a light API]]></title>
            <link>https://www.dotnetweekly.com/articles/nano-services-with-aspnet-core-or-how-to-build-a-light-api</link>
            <guid>https://www.dotnetweekly.com/articles/nano-services-with-aspnet-core-or-how-to-build-a-light-api</guid>
            <pubDate>Mon, 29 Jun 2020 23:51:56 GMT</pubDate>
            <content:encoded><![CDATA[This post might seem bizzare at first. In fact the idea of writing this article did not come to me on my own. The original idea came from a James Newton King tweet, this last is offering a way to write an API in the simplest possible way, efficient and without any particular framework. I found it cool and that’s why I’m making it a post today. Here is his original tweet: https://twitter.com/JamesNK/status/1276450146365001728]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Repository Pattern in ASP.NET Core – Ultimate Guide]]></title>
            <link>https://www.dotnetweekly.com/articles/repository-pattern-in-aspnet-core-ultimate-guide</link>
            <guid>https://www.dotnetweekly.com/articles/repository-pattern-in-aspnet-core-ultimate-guide</guid>
            <pubDate>Mon, 29 Jun 2020 12:24:17 GMT</pubDate>
            <content:encoded><![CDATA[In this extensive guide, we will go through everything you will need to know about Repository Pattern in ASP.NET Core, Generic Repository Patterns, Unit of Work and related topics. We will build a project right from scratch where we implement a clean architecture to access data.

We will cover the following topics.
1. Repository Pattern?
2. Benefits
3. Generic Repository Pattern
4. Implementation in ASP.NET Core WebAPI along-with EFCore
5.Unit Of Work for Commiting Changes to the DB
and more..]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[JSON-RPC in ASP.NET Core With StreamJsonRpc]]></title>
            <link>https://www.dotnetweekly.com/articles/json-rpc-in-aspnet-core-with-streamjsonrpc</link>
            <guid>https://www.dotnetweekly.com/articles/json-rpc-in-aspnet-core-with-streamjsonrpc</guid>
            <pubDate>Mon, 29 Jun 2020 09:11:40 GMT</pubDate>
            <content:encoded><![CDATA[ASP.NET Core already has nice RPC options like SignalR and gRPC. JSON-RPC is an interesting, lightweight and flexible option, which is complementary to the existing ones.]]></content:encoded>
        </item>
    </channel>
</rss>
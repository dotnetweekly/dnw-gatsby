<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>dotNET Weekly - Week undefined Year undefined</title>
        <link>https://www.dotnetweekly.com/week/undefined/year/undefined?feed=rss</link>
        <description></description>
        <lastBuildDate>Mon, 06 Jul 2020 20:24:39 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <category>Articles</category>
        <item>
            <title><![CDATA[Blazor GameDev - part 2: canvas initialization]]></title>
            <link>https://www.dotnetweekly.com/articles/blazor-gamedev-part-2-canvas-initialization</link>
            <guid>https://www.dotnetweekly.com/articles/blazor-gamedev-part-2-canvas-initialization</guid>
            <pubDate>Mon, 06 Jul 2020 18:00:22 GMT</pubDate>
            <content:encoded><![CDATA[Hi All! Welcome to part 2 of the Blazor 2d Gamedev series. Today we're going to see how to initialize the canvas and start rendering something.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Exposing proto files in a gRPC service over a frameworkless and lightweight API]]></title>
            <link>https://www.dotnetweekly.com/articles/exposing-proto-files-in-a-grpc-service-over-a-frameworkless-and-lightweight-api</link>
            <guid>https://www.dotnetweekly.com/articles/exposing-proto-files-in-a-grpc-service-over-a-frameworkless-and-lightweight-api</guid>
            <pubDate>Mon, 06 Jul 2020 00:26:14 GMT</pubDate>
            <content:encoded><![CDATA[A few days ago I introduced the notion of nano service in ASP.NET Core or rather how to implement a REST API without any particular framework (https://anthonygiretti.com/2020/06/29/nano-services-with-asp-net-core-or-how-to-build-a-light-api/). Since then, I have challenged myself regularly on the possibilities of relevant applications of this idea. Well, I found a very interesting use case: exposing the protobuffs of a gRPC service without using a framework and having to manage collisions with the gRPC framework of ASP.NET Core. This article will show you how to do it in the simplest way possible.]]></content:encoded>
        </item>
    </channel>
</rss>
<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>dotNET Weekly - Week undefined Year undefined</title>
        <link>https://www.dotnetweekly.com/week/undefined/year/undefined?feed=rss</link>
        <description></description>
        <lastBuildDate>Wed, 03 Jul 2019 21:42:32 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <category>Articles</category>
        <category>Libraries-Tools</category>
        <category>Books</category>
        <item>
            <title><![CDATA[Testing Production API Endpoints with xUnit]]></title>
            <link>https://www.dotnetweekly.com/articles/testing-production-api-endpoints-with-xunit</link>
            <guid>https://www.dotnetweekly.com/articles/testing-production-api-endpoints-with-xunit</guid>
            <pubDate>Wed, 03 Jul 2019 22:29:39 GMT</pubDate>
            <content:encoded><![CDATA[I’m a big fan of unit tests and integration tests and have written about them frequently. I also authored the original docs on writing integration tests in ASP.NET Core using TestHost and related types. However, sometimes it’s worthwhile to be able to test actual, live API endpoints. This article will lay out a relatively simple way to do this in a configurable manner using xUnit. In the past, I might have used a Visual Studio Web Test for this purpose, but Microsoft is dropping support for these (particularly in the cloud) so I needed a new solution.

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Getting started with gRPC in UWP and ASP.NET Core]]></title>
            <link>https://www.dotnetweekly.com/articles/getting-started-with-grpc-in-uwp-and-aspnet-core</link>
            <guid>https://www.dotnetweekly.com/articles/getting-started-with-grpc-in-uwp-and-aspnet-core</guid>
            <pubDate>Wed, 03 Jul 2019 22:29:23 GMT</pubDate>
            <content:encoded><![CDATA[In this article we describe how to build a UWP app that uses the gRPC protocol -the new WCF- to communicate with a remote host application running on ASP.NET Core 3.0. We’ll discuss:

defining the service model,
generating client and server code,
executing simple RPC calls,
executing server-side streaming RPC calls,
executing client-side streaming RPC calls, and 
executing bidirectional streaming calls.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Web.config Transformation Tester]]></title>
            <link>https://www.dotnetweekly.com/articles/webconfig-transformation-tester</link>
            <guid>https://www.dotnetweekly.com/articles/webconfig-transformation-tester</guid>
            <pubDate>Wed, 03 Jul 2019 07:28:37 GMT</pubDate>
            <content:encoded><![CDATA[Test your XDT transformation files against the original Web.config file. The only online tool that shows you the diff of your changes directly in your browser.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Configuring a Server-side Blazor app with Azure App Configuration]]></title>
            <link>https://www.dotnetweekly.com/articles/configuring-a-server-side-blazor-app-with-azure-app-configuration</link>
            <guid>https://www.dotnetweekly.com/articles/configuring-a-server-side-blazor-app-with-azure-app-configuration</guid>
            <pubDate>Tue, 02 Jul 2019 08:09:30 GMT</pubDate>
            <content:encoded><![CDATA[With .NET Core 3.0 Preview 6, we added authentication & authorization support to server-side Blazor apps. It only takes a matter of seconds to wire up an app to Azure Active Directory with support for single or multiple organizations. Once the project is created, it contains all the configuration elements in its appsettings.json to function. This is great, but in a team environment – or in a distributed topology – configuration files lead to all sorts of problems. In this post, we’ll take a look at how we can extract those configuration values out of JSON files and into an Azure App Configuration instance, where they can be used by other teammates or apps.

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Free eBook on ASP.Net Core 2.2 is available for download]]></title>
            <link>https://www.dotnetweekly.com/articles/free-ebook-on-aspnet-core-22-is-available-for-download</link>
            <guid>https://www.dotnetweekly.com/articles/free-ebook-on-aspnet-core-22-is-available-for-download</guid>
            <pubDate>Tue, 02 Jul 2019 08:09:08 GMT</pubDate>
            <content:encoded><![CDATA[The eBook on ASP.NET Core 2 I wrote together with Ugo Lattanzi is available for download for free from the Free Ebooks section of Syncfusion Tech Portal.

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[11 Essential ASP.NET Interview Questions]]></title>
            <link>https://www.dotnetweekly.com/articles/https-wwwtoptalcom-asp-dot-net-interview-questions</link>
            <guid>https://www.dotnetweekly.com/articles/https-wwwtoptalcom-asp-dot-net-interview-questions</guid>
            <pubDate>Tue, 02 Jul 2019 08:01:37 GMT</pubDate>
            <content:encoded><![CDATA[11 Essential ASP.NET Interview Questions]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Forwarded Headers Middleware Updates in .NET Core 3.0 preview 6]]></title>
            <link>https://www.dotnetweekly.com/articles/forwarded-headers-middleware-updates-in-net-core-30-preview-6</link>
            <guid>https://www.dotnetweekly.com/articles/forwarded-headers-middleware-updates-in-net-core-30-preview-6</guid>
            <pubDate>Tue, 02 Jul 2019 07:59:34 GMT</pubDate>
            <content:encoded><![CDATA[With the ASP.NET Core 2.1 release, we included UseHsts and UseHttpRedirection by default. These methods put a site into an infinite loop if deployed to an Azure Linux App Service, Azure Linux virtual machine (VM), or behind any other reverse proxy besides IIS. TLS is terminated by the reverse proxy, and Kestrel isn’t made aware of the correct request scheme.

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Create interactive documentation with the new Try .NET template]]></title>
            <link>https://www.dotnetweekly.com/articles/create-interactive-documentation-with-the-new-try-net-template</link>
            <guid>https://www.dotnetweekly.com/articles/create-interactive-documentation-with-the-new-try-net-template</guid>
            <pubDate>Tue, 02 Jul 2019 07:59:19 GMT</pubDate>
            <content:encoded><![CDATA[In our previous post, we announced dotnet try a global tool which allows developers to create interactive workshops and documentation. Tutorials created with dotnet try let users start learning without having to install an editor. Features like IntelliSense and live diagnostics give users a sophisticated learning and editing experience. Today, we are releasing a new dotnet new template called trydotnet-tutorial. This template can be installed next to existing dotnet new templates. It creates a project and associated files to help content authors understand the basics of dotnet try. This can serve as the foundation of your own awesome documentation!
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Using High-Performance Techniques to Base64 Encode a GUID]]></title>
            <link>https://www.dotnetweekly.com/articles/using-high-performance-techniques-to-base64-encode-a-guid</link>
            <guid>https://www.dotnetweekly.com/articles/using-high-performance-techniques-to-base64-encode-a-guid</guid>
            <pubDate>Tue, 02 Jul 2019 07:59:01 GMT</pubDate>
            <content:encoded><![CDATA[It’s been a little while since my last high-performance post, but my use of the techniques and features continues! In this post, I want to present a more practical example which I hope will help to illustrate a real-world use case for some of the new .NET Core performance focused API changes.

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[PWA Starter - A Free, Online Tool to Generate the Files You Need to Update to a Progressive Web Application]]></title>
            <link>https://www.dotnetweekly.com/articles/pwa-starter-a-free-online-tool-to-generate-the-files-you-need-to-update-to-a-progressive-web-applic</link>
            <guid>https://www.dotnetweekly.com/articles/pwa-starter-a-free-online-tool-to-generate-the-files-you-need-to-update-to-a-progressive-web-applic</guid>
            <pubDate>Tue, 02 Jul 2019 07:58:42 GMT</pubDate>
            <content:encoded><![CDATA[One of the most common requests I receive is to help businesses upgrade their websites to progressive web applications. This makes sense since I produce as much if not more content about PWAs than anyone else.

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[You can now download the new Open Source Windows Terminal]]></title>
            <link>https://www.dotnetweekly.com/articles/you-can-now-download-the-new-open-source-windows-terminal</link>
            <guid>https://www.dotnetweekly.com/articles/you-can-now-download-the-new-open-source-windows-terminal</guid>
            <pubDate>Tue, 02 Jul 2019 07:57:39 GMT</pubDate>
            <content:encoded><![CDATA[Last month Microsoft announced a new open source Windows Terminal! It's up at https://github.com/microsoft/Terminal and it's great, but for the last several weeks you've had to build it yourself as a Developer. It's been very v0.1 if you know what I mean.

]]></content:encoded>
        </item>
    </channel>
</rss>
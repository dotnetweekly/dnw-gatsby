<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>dotNET Weekly - Week undefined Year undefined</title>
        <link>https://www.dotnetweekly.com/week/undefined/year/undefined?feed=rss</link>
        <description></description>
        <lastBuildDate>Tue, 29 Jan 2019 05:18:19 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <category>Articles</category>
        <item>
            <title><![CDATA[ (Not so) Stupid Question 320: How much time do you spend each week to stay current with .NET & Microsoft technologies?]]></title>
            <link>https://www.dotnetweekly.com/articles/not-so-stupid-question-320-how-much-time-do-you-spend-each-week-to-stay-current-with-net-and-micros</link>
            <guid>https://www.dotnetweekly.com/articles/not-so-stupid-question-320-how-much-time-do-you-spend-each-week-to-stay-current-with-net-and-micros</guid>
            <pubDate>Tue, 29 Jan 2019 04:31:23 GMT</pubDate>
            <content:encoded><![CDATA[Earlier this week I had the pleasure of delivering two lectures at a local school for 50 students (approx.).

Loke (7 weeks) joined me for the two talks, and although my back was aching from carrying him for four hours straight, I was very thankful he slept through most of it. He usually isn’t a very good sleeper, and is a fussy baby that refuses to be alone (and that’s okay!). One of the two talks was about staying current with .NET, and I got several really good questions during/after the talk (thank you!!). One of them was: How much time do you spend each week, staying current with .NET. I’m more than happy to answer that question, and I want people to know that what I’m doing is not a recommendation or a blueprint, its just an example of how one person does it- and I’m VERY engaged in the community so I do spend more time than most people would consider ‘normal’. Here is my reply, and how I fit this in my life as a first-time mum to a 7-week-old baby, working part time. I’m currently working 25%, 40% from next week as the dad, Emanuel, wants to stay at home part-time so he won’t miss our so much. I work from the office on Wednesdays, the rest from home.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Why every new web app at PayPal starts with TypeScript]]></title>
            <link>https://www.dotnetweekly.com/articles/why-every-new-web-app-at-paypal-starts-with-typescript</link>
            <guid>https://www.dotnetweekly.com/articles/why-every-new-web-app-at-paypal-starts-with-typescript</guid>
            <pubDate>Mon, 28 Jan 2019 19:57:24 GMT</pubDate>
            <content:encoded><![CDATA[At PayPal, I work on a tool called paypal-scripts which is a toolkit (like react-scripts from create-react-app, or angular-cli, or ember-cli or … etc…). I’ve written about it before. The idea is that it encapsulates all the tools common to PayPal applications and published modules. The goal being taking the huge list of devDependencies in the package.json and all the config files and reducing that down to one entry in the devDependencies. And because all the config lives within a single opinionated package, keeping things updated is a matter of updating one dependency (paypal-scripts) which typically does not need to make breaking changes. So you just keep that one dep updated and you go back to building your app.

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA["Stack Walking" in the .NET Runtime]]></title>
            <link>https://www.dotnetweekly.com/articles/stack-walking-in-the-net-runtime</link>
            <guid>https://www.dotnetweekly.com/articles/stack-walking-in-the-net-runtime</guid>
            <pubDate>Mon, 28 Jan 2019 19:55:05 GMT</pubDate>
            <content:encoded><![CDATA[The CLR makes heavy use of a technique known as stack walking (or stack crawling). This involves iterating the sequence of call frames for a particular thread, from the most recent (the thread’s current function) back down to the base of the stack.

The rest of this post will explore what ‘Stack Walking’ is, how it works and why so many parts of the runtime need to be involved.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Easy network code in C#]]></title>
            <link>https://www.dotnetweekly.com/articles/easy-network-code-in-c</link>
            <guid>https://www.dotnetweekly.com/articles/easy-network-code-in-c</guid>
            <pubDate>Mon, 28 Jan 2019 19:53:52 GMT</pubDate>
            <content:encoded><![CDATA[So you want to add some sort of networking functionality to your C# application?
Then this little blog-post is for you!
It doesn’t even matter if you’d consider yourself a noob because I’m about to make network code real easy for you.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[The best of C# and .NET in 2018]]></title>
            <link>https://www.dotnetweekly.com/articles/the-best-of-c-and-net-in-2018</link>
            <guid>https://www.dotnetweekly.com/articles/the-best-of-c-and-net-in-2018</guid>
            <pubDate>Mon, 28 Jan 2019 14:55:14 GMT</pubDate>
            <content:encoded><![CDATA[List of the best C# and .NET articles and videos in 2018. C# 7 and 8, VS 2019, .NET Core 3, ASP.NET Core 2.2, Azure Functions, Azure DevOps, Blazor and more.]]></content:encoded>
        </item>
    </channel>
</rss>
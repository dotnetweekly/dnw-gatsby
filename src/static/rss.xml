<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>dotNET Weekly - Week undefined Year undefined</title>
        <link>https://www.dotnetweekly.com/week/undefined/year/undefined?feed=rss</link>
        <description></description>
        <lastBuildDate>Tue, 29 Sep 2020 05:44:38 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <category>Videos</category>
        <category>Articles</category>
        <category>Libraries-Tools</category>
        <item>
            <title><![CDATA[Azure Container Instances (ACI) under the hood]]></title>
            <link>https://www.dotnetweekly.com/articles/azure-container-instances-aci-under-the-hood</link>
            <guid>https://www.dotnetweekly.com/articles/azure-container-instances-aci-under-the-hood</guid>
            <pubDate>Tue, 29 Sep 2020 05:42:39 GMT</pubDate>
            <content:encoded><![CDATA[Have you ever wondered what's going on under the hood for serverless offerings like Azure Container Instances? MacKenzie Olson shows Scott Hanselman the latest innovations in the infrastructure that powers ACI and a peek at the product roadmap, including a demo of the managed identity experience coming soon.

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[TodoMVC Full Stack with Azure Static WebApps, Node and Azure SQL #beginners #node #sql #serverless]]></title>
            <link>https://www.dotnetweekly.com/articles/todomvc-full-stack-with-azure-static-webapps-node-and-azure-sql-beginners-node-sql-serverless</link>
            <guid>https://www.dotnetweekly.com/articles/todomvc-full-stack-with-azure-static-webapps-node-and-azure-sql-beginners-node-sql-serverless</guid>
            <pubDate>Tue, 29 Sep 2020 05:40:23 GMT</pubDate>
            <content:encoded><![CDATA[TodoMVC is a very well known (like ~27K GitHub stars known) application among developers as it is a really great way to start to learn a new Model-View-Something framework. It has plenty of samples done with different frameworks, all implementing exactly the same solution. This way is very easy to compare them against each other and see what is the one you prefer. Creating a To-Do App is easy enough, but not too easy, to be the perfect playground to learn a new technology.

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Optimizing Your Website with Fiddler and Lighthouse]]></title>
            <link>https://www.dotnetweekly.com/articles/optimizing-your-website-with-fiddler-and-lighthouse</link>
            <guid>https://www.dotnetweekly.com/articles/optimizing-your-website-with-fiddler-and-lighthouse</guid>
            <pubDate>Tue, 29 Sep 2020 05:39:46 GMT</pubDate>
            <content:encoded><![CDATA[Fiddler Everywhere can be used to inspect and debug web traffic, but also to help you optimize your website performance on conjunction with the Chrome DevTools and Lighthouse.

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Retrieve my ASP .NET Core WebAPI demo app fully migrated to ASP .NET Core 5 !]]></title>
            <link>https://www.dotnetweekly.com/articles/retrieve-my-asp-net-core-webapi-demo-app-fully-migrated-to-asp-net-core-5</link>
            <guid>https://www.dotnetweekly.com/articles/retrieve-my-asp-net-core-webapi-demo-app-fully-migrated-to-asp-net-core-5</guid>
            <pubDate>Tue, 29 Sep 2020 01:24:36 GMT</pubDate>
            <content:encoded><![CDATA[Retrieve my ASP .NET Core WebAPI demo app fully migrated to ASP .NET Core 5 !
Retrieve the following must have features:
Authentication, validation, caching, error handling, logging, documentation with Swagger, and many more !]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[ASP.NET Core 5 Route to Code: Taking advantage of Microsoft.AspNetCore.Http json extensions]]></title>
            <link>https://www.dotnetweekly.com/articles/aspnet-core-5-route-to-code-taking-advantage-of-microsoftaspnetcorehttp-json-extensions</link>
            <guid>https://www.dotnetweekly.com/articles/aspnet-core-5-route-to-code-taking-advantage-of-microsoftaspnetcorehttp-json-extensions</guid>
            <pubDate>Tue, 29 Sep 2020 01:23:21 GMT</pubDate>
            <content:encoded><![CDATA[A while ago, I have introduced a cool feature of ASP.NET Core: how to build a lightweight API without using a framework. I named it like this: Nano service with ASP.NET Core: which you can find here: https://anthonygiretti.com/2020/06/29/nano-services-with-asp-net-core-or-how -to-build-a-light-api, I still like this feature and Microsoft called it: Route to Code, how could I not have thought about it before?
In this article I will tell you about an improvement made by ASP.NET Core 5: a simpler writing of Route to Code services thanks to JSON extensions for HttpRequest and HttpResponse based on System.Text.Json brought by ASP. NET Core 3 in 2019.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Razor Page CRUD in ASP.NET Core with jQuery AJAX â€“ Ultimate Guide]]></title>
            <link>https://www.dotnetweekly.com/articles/razor-page-crud-in-aspnet-core-with-jquery-ajax-ultimate-guide</link>
            <guid>https://www.dotnetweekly.com/articles/razor-page-crud-in-aspnet-core-with-jquery-ajax-ultimate-guide</guid>
            <pubDate>Mon, 28 Sep 2020 18:54:53 GMT</pubDate>
            <content:encoded><![CDATA[Let's Build an ASP. NET Core Razor Page Web Application with CRUD Operations. This is not any simple CRUD Tutorial but coupled with quite a lot of other features too. Here is what you will be learning.

Setting up a Solution following Clean / Onion Architecture
Entity Framework Core
Repository Pattern with Unit Of Work
Razor Pages
Bootstrap Modal
JQuery AJAX Calls to render the Razor Partial Views with no Page Reloads whatsoever.
jQuery Datatables
Client Side Validation with jQuery Unobstructive Library
and so much more.

Basically what we will build is a CRUD Application with Rich User Experience and Blazing Fast Operations. Thanks to jQuery!]]></content:encoded>
        </item>
    </channel>
</rss>
<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>dotNET Weekly - Week undefined Year undefined</title>
        <link>https://www.dotnetweekly.com/week/undefined/year/undefined?feed=rss</link>
        <description></description>
        <lastBuildDate>Fri, 28 Feb 2020 04:36:13 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <category>Articles</category>
        <category>Videos</category>
        <category>Libraries-Tools</category>
        <item>
            <title><![CDATA[Reinforcement Learning with Unity ML Agents]]></title>
            <link>https://www.dotnetweekly.com/articles/reinforcement-learning-with-unity-ml-agents</link>
            <guid>https://www.dotnetweekly.com/articles/reinforcement-learning-with-unity-ml-agents</guid>
            <pubDate>Fri, 28 Feb 2020 04:34:40 GMT</pubDate>
            <content:encoded><![CDATA[A couple of years ago Unity started working on a framework, that would enable training machine learning algorithms in virtual environments: ML-Agents Toolkit. It is used by a number of companies across the world, including famous DeepMind, to aid research in computer vision and robotics in such tasks as autonomous driving.

In this post we present an example bot built with C# and TensorFlow framework, that learns to play a game in a simple Unity-based virtual environment using one of the state of the art reinforcement learning algorithms: soft actor-critic.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[VS Code Integration with GitHub and Azure]]></title>
            <link>https://www.dotnetweekly.com/articles/vs-code-integration-with-github-and-azure</link>
            <guid>https://www.dotnetweekly.com/articles/vs-code-integration-with-github-and-azure</guid>
            <pubDate>Fri, 28 Feb 2020 04:33:57 GMT</pubDate>
            <content:encoded><![CDATA[In this episode, Robert is joined by Aaron Powell, who demonstrates Visual Studio Code and its integrations with GitHub and Azure. Aaron shows that VS Code provides a complete developer experience that enables you to spend more time and effort on coding and less time switching between tools. Visual Studio developers are used to this. Now, Visual Studio Code developers have this experience as well. 

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Visual Studio Online]]></title>
            <link>https://www.dotnetweekly.com/articles/visual-studio-online</link>
            <guid>https://www.dotnetweekly.com/articles/visual-studio-online</guid>
            <pubDate>Fri, 28 Feb 2020 04:26:22 GMT</pubDate>
            <content:encoded><![CDATA[In this episode, Robert is joined by Burke Holland, who introduces us to Visual Studio Online, which provides a cloud-based development environment you can access from anywhere. Burke shows how easy it is to spin up a new environment, point it at a repo and start coding. 

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Web Workers, comlink, TypeScript and React]]></title>
            <link>https://www.dotnetweekly.com/articles/web-workers-comlink-typescript-and-react</link>
            <guid>https://www.dotnetweekly.com/articles/web-workers-comlink-typescript-and-react</guid>
            <pubDate>Fri, 28 Feb 2020 04:12:12 GMT</pubDate>
            <content:encoded><![CDATA[JavaScript is famously single threaded. However, if you're developing for the web, you may well know that this is not quite accurate. There are Web Workers:

A worker is an object created using a constructor (e.g. Worker()) that runs a named JavaScript file — this file contains the code that will run in the worker thread; workers run in another global context that is different from the current window.

Given that there is a way to use other threads for background processing, why doesn't this happen all the time? Well there's a number of reasons; not the least of which is the ceremony involved in interacting with Web Workers. Consider the following example that illustrates moving a calculation into a worker:]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[CQRS + Event Sourcing – Step by Step]]></title>
            <link>https://www.dotnetweekly.com/articles/cqrs-event-sourcing-step-by-step</link>
            <guid>https://www.dotnetweekly.com/articles/cqrs-event-sourcing-step-by-step</guid>
            <pubDate>Fri, 28 Feb 2020 04:11:33 GMT</pubDate>
            <content:encoded><![CDATA[A common issue I see is understanding the flow of commands, events and queries within a typical CQRS ES based system. The following post is designed to clear up what happens at each step. Hopefully this will help you to reason about your code and what each part does.

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Null API Responses and HTTP 204 Results in ASP.NET Core]]></title>
            <link>https://www.dotnetweekly.com/articles/null-api-responses-and-http-204-results-in-aspnet-core</link>
            <guid>https://www.dotnetweekly.com/articles/null-api-responses-and-http-204-results-in-aspnet-core</guid>
            <pubDate>Fri, 28 Feb 2020 03:26:28 GMT</pubDate>
            <content:encoded><![CDATA[ASP.NET Core 3.x has a behavior that results in API results that return null from the controller action returning a HTTP 204 - No Content response rather than a null JSON result. Presumably the idea is that if you return null from an API, your intention is to return 'no content' and that sort of make sense in some cases. Except... when you're building an API null may actually have a meaning on the client or the client at minimum may be expecting a proper JSON response.

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Deploying Machine Learning Models – pt. 3: gRPC and TensorFlow Serving]]></title>
            <link>https://www.dotnetweekly.com/articles/deploying-machine-learning-models-pt-3-grpc-and-tensorflow-serving</link>
            <guid>https://www.dotnetweekly.com/articles/deploying-machine-learning-models-pt-3-grpc-and-tensorflow-serving</guid>
            <pubDate>Fri, 28 Feb 2020 03:20:51 GMT</pubDate>
            <content:encoded><![CDATA[In the previous articles, we explored how we can serve TensorFlow Models with Flask and how we can accomplish the same thing with Docker in combination with TensorFlow Serving. Both of these approaches utilized REST API. We were able to explore some good things regarding this approach. However, we also detected some shortcomings. The major ones are scalability and speed. In this article, we address both of those problems. Also, sometimes it feels unnatural to serve deep learning models with REST API because these are usually embedded within some kind of microservice. That is where gRPC comes into the picture. First, let’s get familiar with this technology and then we explore how we can use it in combination with TensorFlow Serving.

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Getting Started with CORS in ASP.NET Core]]></title>
            <link>https://www.dotnetweekly.com/articles/getting-started-with-cors-in-aspnet-core</link>
            <guid>https://www.dotnetweekly.com/articles/getting-started-with-cors-in-aspnet-core</guid>
            <pubDate>Fri, 28 Feb 2020 03:19:39 GMT</pubDate>
            <content:encoded><![CDATA[If you are using an API in your application, you probably have come across CORS at some point. And no, we are not talking about the successful Irish band that had many top hits in the 90s. That’s a different spelling anyways. We are talking about Cross-Origin Resource Sharing (CORS).

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Saving basic data in Blazor]]></title>
            <link>https://www.dotnetweekly.com/articles/saving-basic-data-in-blazor</link>
            <guid>https://www.dotnetweekly.com/articles/saving-basic-data-in-blazor</guid>
            <pubDate>Wed, 26 Feb 2020 10:47:17 GMT</pubDate>
            <content:encoded><![CDATA[In this tutorial, you will learn how to use Blazor to render a form, and save the data from it in a database, using Entity Framework.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[GrandNode - e-commerce platform based on .NET Core and MongoDB]]></title>
            <link>https://www.dotnetweekly.com/articles/grandnode-e-commerce-platform-based-on-net-core-and-mongodb</link>
            <guid>https://www.dotnetweekly.com/articles/grandnode-e-commerce-platform-based-on-net-core-and-mongodb</guid>
            <pubDate>Wed, 26 Feb 2020 08:16:25 GMT</pubDate>
            <content:encoded><![CDATA[GrandNode seems to be one of the most advanced e-commerce platforms based on .NET Core and MongoDB. Without external plugins you can create marketplace with commissions for vendors, knowledge base, auction portal, portal with online courses. ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Dependency Injection in Azure Functions with C#]]></title>
            <link>https://www.dotnetweekly.com/articles/dependency-injection-in-azure-functions-with-c</link>
            <guid>https://www.dotnetweekly.com/articles/dependency-injection-in-azure-functions-with-c</guid>
            <pubDate>Tue, 25 Feb 2020 21:24:35 GMT</pubDate>
            <content:encoded><![CDATA[How to add Dependency Injection to Azure Functions]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Generate a PDF from ASP.NET Core for free]]></title>
            <link>https://www.dotnetweekly.com/articles/generate-a-pdf-from-aspnet-core-for-free</link>
            <guid>https://www.dotnetweekly.com/articles/generate-a-pdf-from-aspnet-core-for-free</guid>
            <pubDate>Tue, 25 Feb 2020 06:16:19 GMT</pubDate>
            <content:encoded><![CDATA[Show you how to generate a PDF file from ASP.NET for free. There are a lot of paid components out there, but it doesn't have to cost you anything.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Software architecture is like dominoes]]></title>
            <link>https://www.dotnetweekly.com/articles/software-architecture-is-like-dominoes</link>
            <guid>https://www.dotnetweekly.com/articles/software-architecture-is-like-dominoes</guid>
            <pubDate>Mon, 24 Feb 2020 17:09:54 GMT</pubDate>
            <content:encoded><![CDATA[The author shares an analogy between dominoes and the popular line-of-business app architectures circulating in the .NET world.]]></content:encoded>
        </item>
    </channel>
</rss>